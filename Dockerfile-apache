ARG PHP_VERSION=8
FROM php:${PHP_VERSION}-apache
LABEL org.opencontainers.image.description="PHP base image with commonly used extensions pre-installed" \
     "com.koalaphils.vendor"="Koala Software Technology Innovations" \
     "com.koalaphils.image.author"="mdprotacio@outlook.com"

COPY --from=ghcr.io/php/pie:bin /pie /usr/bin/pie
ENV DEBIAN_FRONTEND=noninteractive
ENV COMPOSER_ALLOW_SUPERUSER=1

# Dependencies for building PHP extensions
ENV PHPIZE_DEPS \
    $PHPIZE_DEPS \
# Add dependencies for PIE \
    autoconf \
    automake \
    gcc \
    git \
    libtool \
    m4 \
    make \
# Add helper tools for development \
    gettext-base \
    netcat-traditional \
    wget

# Fixes for apt-get hash sum mismatch errors
RUN { \
      echo 'Acquire::Retries "5";'; \
      echo 'Acquire::http::Timeout "60";'; \
      echo 'Acquire::https::Timeout "60";'; \
      echo 'Acquire::http::No-Cache "true";'; \
      echo 'Acquire::http::Pipeline-Depth "0";'; \
      echo 'Acquire::ForceIPv4 "true";'; \
    } > /etc/apt/apt.conf.d/99fix-hashmismatch

# Install dependencies
RUN set -eux; \
    apt-get clean; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        $PHPIZE_DEPS \
        `apt-cache pkgnames libavif | sort -V | head -1` \
        `apt-cache pkgnames libfreetype | sort -V | head -1` \
        `apt-cache pkgnames libicu | grep -v "java" | sort -V | head -1` \
        `apt-cache pkgnames libjpeg | sort -V | head -1` \
        `apt-cache pkgnames libpng | sort -V | head -1` \
        `apt-cache pkgnames libwebp | sort -V | head -1` \
        `apt-cache pkgnames libmagickcore | grep headers | sort | head -1` \
        `apt-cache pkgnames libmagickwand | grep headers | sort | head -1` \
        `apt-cache pkgnames libmcrypt | sort -V | head -1` \
        `apt-cache pkgnames libmemcache | sort -V | head -1` \
        `apt-cache pkgnames libmsgpack | sort -V | head -1` \
        `apt-cache pkgnames libzip | grep -v "java" | sort -V | head -1` \
        `apt-cache pkgnames unixodbc | sort -V | head -1` \
        `apt-cache pkgnames zlib | sort -V | head -1` \
    ; \
    apt-get dist-clean

# Install PHP extension build dependencies
RUN set -eux; \
    savedAptMark="$(apt-mark showmanual)"; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        libicu-dev \
        libpng-dev \
        libmsgpack-dev \
        libmemcached-dev \
        libmagickcore-dev \
        libmagickwand-dev \
        `apt-cache pkgnames libavif | grep dev | sort | head -1` \
        `apt-cache pkgnames libfreetype | grep dev | sort -V | head -1` \
        `apt-cache pkgnames libjpeg | grep dev | sort -V | head -1` \
        `apt-cache pkgnames libwebp | grep dev | sort -V | head -1` \
        `apt-cache pkgnames libmcrypt | grep dev | sort | head -1` \
        `apt-cache pkgnames libzip | grep dev | sort | head -1` \
        `apt-cache pkgnames unixodbc | grep dev | sort -V | head -1` \
        `apt-cache pkgnames zlib | grep dev | sort -V | head -1` \
    ; \
\
# Install PHP extensions from source using PECL \
    pecl install --onlyreqdeps --nobuild igbinary; \
        cd "$(pecl config-get temp_dir)/igbinary"; \
        phpize; \
        ./configure; \
        make && make test && make install && make clean || exit 1; \
        cd -; \
        docker-php-ext-enable --ini-name 0-docker-php-ext-igbinary.ini igbinary; \
    pecl install --onlyreqdeps --nobuild msgpack; \
        cd "$(pecl config-get temp_dir)/msgpack"; \
        phpize; \
        ./configure; \
        make && make test && make install && make clean || exit 1; \
        cd -; \
        docker-php-ext-enable --ini-name 0-docker-php-ext-msgpack.ini msgpack; \
    pecl install --onlyreqdeps --nobuild sqlsrv; \
        cd "$(pecl config-get temp_dir)/sqlsrv"; \
        phpize; \
        ./configure; \
        make && make test && make install && make clean || exit 1; \
        cd -; \
    pecl install --onlyreqdeps --nobuild pdo_sqlsrv; \
        cd "$(pecl config-get temp_dir)/pdo_sqlsrv"; \
        phpize; \
        ./configure; \
        make && make test && make install && make clean || exit 1; \
        cd -; \
    pecl install --onlyreqdeps --nobuild xhprof; \
        cd "$(pecl config-get temp_dir)/xhprof/extension"; \
        phpize; \
        ./configure; \
        make && make test && make install && make clean || exit 1; \
        cd -; \
\
# Install PHP extensions built into the official image \
    docker-php-ext-configure gd --with-jpeg --with-webp --with-freetype --with-avif; \
    docker-php-ext-install -j"$(nproc)" \
        bcmath \
        dba \
        gd \
        gettext \
        intl \
        mysqli \
        pdo_mysql \
        pcntl \
        sockets \
        zip; \
    \
# Install additional PHP extensions using PIE for easier management and to get the latest stable versions \
    pie install apcu/apcu --skip-enable-extension; \
    pie install phpredis/phpredis --enable-redis-igbinary --enable-redis-msgpack --skip-enable-extension; \
    pie install php-memcached/php-memcached --enable-memcached-igbinary --enable-memcached-msgpack --skip-enable-extension; \
    pie install xdebug/xdebug --skip-enable-extension; \
    pie install osmanov/pecl-ev --skip-enable-extension; \
    pie install pecl/pcov --skip-enable-extension; \
    pie install nikic/php-ast --skip-enable-extension; \
    pie install swoole/swoole --skip-enable-extension; \
    pie install pecl/mcrypt --skip-enable-extension; \
    pie install imagick/imagick --skip-enable-extension; \
    \
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies \
    apt-mark auto '.*' > /dev/null; \
    [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
    find /usr/local -type f -executable -exec ldd '{}' ';' \
        | awk '/=>/ { so = $(NF-1); if (index(so, "/usr/local/") == 1) { next }; gsub("^/(usr/)?", "", so); printf "*%s\n", so }' \
        | sort -u \
        | xargs -rt dpkg-query --search \
# https://manpages.debian.org/trixie/dpkg/dpkg-query.1.en.html#S (we ignore diversions and it'll be really unusual for more than one package to provide any given .so file) \
        | awk 'sub(":$", "", $1) { print $1 }' \
        | sort -u \
        | xargs -r apt-mark manual \
    ; \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
    apt-get dist-clean; \
    \
# update pecl channel definitions https://github.com/docker-library/php/issues/443 \
    pecl update-channels; \
    rm -rf /tmp/pear ~/.pearrc; \
    \
# smoke test \
    php -m; \
# remove all extensions by default except for igbinary and msgpack \
    rm -rf $PHP_INI_DIR/conf.d/docker-php-ext-*.ini; \
    rm -rf /tmp/* ~/.pearrc /var/lib/apt/lists/* /var/cache/*; \
# re-enable default extensions by official image \
    docker-php-ext-enable sodium opcache; \
# copy envsubst for easier use in entrypoint scripts \
    cp /usr/bin/envsubst /usr/local/bin/envsubst; \
# apache tweaks \
    a2enmod \
      buffer \
      expires \
      headers \
      mime_magic \
      remoteip \
      rewrite; \
    mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini \
    ; sed -i "s|^expose_php\s*=\s*\(.*\)|expose_php=Off|g" $PHP_INI_DIR/php.ini \
    ; sed -i "s|^\(;\)*realpath_cache_size\s*=\s*\(.*\)|realpath_cache_size=\2|g" $PHP_INI_DIR/php.ini \
    ; sed -i "s|^\(;\)*realpath_cache_ttl\s*=\s*\(.*\)|realpath_cache_ttl=\2|g" $PHP_INI_DIR/php.ini \
    ; sed -i "s|^ServerSignature\(.*\)|ServerSignature Off|g" $APACHE_CONFDIR/conf-enabled/security.conf \
    ; sed -i "s|^ServerTokens\(.*\)|ServerTokens Prod|g" $APACHE_CONFDIR/conf-enabled/security.conf \
    ; echo "LogFormat \"\\\"%{X-Forwarded-For}i %h\\\" %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined" > $APACHE_CONFDIR/conf-available/log_combined.conf \
    ; a2enconf log_combined \
    ;

WORKDIR /var/www/html

