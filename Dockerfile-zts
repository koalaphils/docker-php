ARG PHP_VERSION=8
FROM php:${PHP_VERSION}-zts
LABEL org.opencontainers.image.description="PHP base image with commonly used extensions pre-installed" \
     "com.koalaphils.vendor"="Koala Software Technology Innovations" \
     "com.koalaphils.image.author"="mdprotacio@outlook.com"

RUN set -eux; \
  apt-get update \
  && LIBAVIF=`apt-cache pkgnames libavif | head -1` \
  && LIBMPDEC=`apt-cache pkgnames libmpdec | head -1` \
  && apt-get install --no-install-recommends -y \
    ca-certificates \
    curl \
    git \
    imagemagick \
    ${LIBAVIF} \
    libcmph0 \
    libedit2 \
    libhashkit2 \
    libjpeg62-turbo \
    libmemcached11 \
    libmemcachedutil2 \
    ${LIBMPDEC} \
    libmsgpackc2 \
    libpng16-16 \
    libsodium23 \
    libxpm4 \
    libzip4 \
    netcat \
    tzdata \
    unzip \
    zlib1g \
  ; \
  apt-mark manual '.*' > /dev/null; \
  savedAptMark="$(apt-mark showmanual)"; \
  apt-get install -y --no-install-recommends \
    $PHPIZE_DEPS \
    gettext-base \
    libargon2-dev \
    libavif-dev \
    libcmph-dev \
    libcurl4-openssl-dev \
    libedit-dev \
    libicu-dev \
    libjpeg-dev \
    libjpeg62-turbo-dev \
    libmagick++-dev \
    libmagickwand-dev \
    libmemcached-dev \
    libmpdec-dev \
    libmsgpack-dev \
    libpng-dev \
    libpng++-dev \
    libsodium-dev \
    libssl-dev \
    libwebp-dev \
    libxml2-dev \
    libxpm-dev \
    libzip-dev \
    libbz2-dev \
    zlib1g-dev \
    ${PHP_EXTRA_BUILD_DEPS:-} \
  ; export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS" \
  ; set +e \
  ; $(dpkg --compare-versions ${PHP_VERSION} ge 8.1) \
  ; if [ "$?" -eq "0" ]; then WITH_AVIF=--with-avif; else WITH_AVIF=; fi \
  ; $(dpkg --compare-versions ${PHP_VERSION} ge 7.4) \
  ; if [ "$?" -eq "0" ]; then WITH_PARAMS="--with-jpeg --with-xpm --with-webp --with-freetype ${WITH_AVIF}"; \
    else WITH_PARAMS="--with-jpeg-dir=/usr/include --with-png-dir=/usr/include --with-webp-dir=/usr/include --with-freetype-dir=/usr/include --with-xpm-dir=/usr/include"; fi \
  ; set -e \
  ; \
  docker-php-ext-configure gd ${WITH_PARAMS} \
    ; \
  docker-php-ext-install -j$(nproc) \
    gd \
    gettext \
    intl \
    opcache \
    pcntl \
    sockets \
    zip \
    ; \
  pecl update-channels \
    ; \
  pecl install --onlyreqdeps --nobuild decimal; \
    cd "$(pecl config-get temp_dir)/decimal"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild igbinary; \
    cd "$(pecl config-get temp_dir)/igbinary"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild msgpack; \
    cd "$(pecl config-get temp_dir)/msgpack"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild apcu; \
    cd "$(pecl config-get temp_dir)/apcu"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild imagick; \
    cd "$(pecl config-get temp_dir)/imagick"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild redis; \
    cd "$(pecl config-get temp_dir)/redis"; \
    phpize; \
    ./configure --enable-redis-igbinary --enable-redis-json --enable-redis-msgpack; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild memcached; \
    cd "$(pecl config-get temp_dir)/memcached"; \
    phpize; \
    ./configure --enable-memcached-igbinary --enable-memcached-json --enable-memcached-session --enable-memcached-sasl --enable-memcached-msgpack; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild xdebug; \
    cd "$(pecl config-get temp_dir)/xdebug"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild xhprof; \
    cd "$(pecl config-get temp_dir)/xhprof/extension"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  pecl install --onlyreqdeps --nobuild ev; \
    cd "$(pecl config-get temp_dir)/ev"; \
    phpize; \
    ./configure; \
    make && make install; \
    cd -; \
  docker-php-ext-enable \
    apcu \
    ev \
    ; \
  cp /usr/bin/envsubst /usr/local/bin/envsubst; \
  apt-mark auto '.*' > /dev/null; \
  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImport=false; \
  rm -rf /tmp/* ~/.pearrc /var/lib/apt/lists/* /var/cache/*; \
  php --version \
  ; mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini \
  ; sed -i "s|^expose_php\s*=\s*\(.*\)|expose_php=Off|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*realpath_cache_size\s*=\s*\(.*\)|realpath_cache_size=\2|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*realpath_cache_ttl\s*=\s*\(.*\)|realpath_cache_ttl=3600|g" $PHP_INI_DIR/php.ini \
  ; sed -i "s|^\(;\)*zlib.output_compression\s*=\s*\(.*\)|zlib.output_compression=On|g" $PHP_INI_DIR/php.ini \
  ;

COPY --from=composer /usr/bin/composer /usr/local/bin/composer

WORKDIR /var/www/html
CMD ["php" "-a"]
