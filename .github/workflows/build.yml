name: Reusable Workflow

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      variant:
        required: true
        type: string
      tags:
        required: true
        type: string
      dockerfile:
        required: true
        type: string

jobs:
  build-version:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.short-sha.outputs.sha }}
      date: ${{ steps.date.outputs.date }}
    steps:
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT
  build-image:
    runs-on: ubuntu-latest
    needs: build-version
    timeout-minutes: 180
    permissions:
      packages: write
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: PHP ${{ inputs.version }} ${{ inputs.variant }}
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ${{ inputs.dockerfile }}
          build-args: |
            PHP_VERSION=${{ inputs.version }}
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64/v8
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/cache/php:${{ inputs.version }}-fpm
          cache-to: type=registry,mode=max,ref=ghcr.io/${{ github.repository_owner }}/cache/php:${{ inputs.version }}-fpm
          push: true
          tags: |
            ${{ inputs.tags }}
