# This is a basic workflow to help you get started with Actions

name: Build and Push to Registry

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  schedule:
    - cron: 0 2 * * 2,6
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-version-id:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.short-sha.outputs.sha }}
      date: ${{ steps.date.outputs.date }}
    steps:
      - uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6
      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT

  tag-latest:
    needs: [create-version-id, build-versions]
    strategy:
      matrix:
        variant:
          - apache
          - cli
          - cli-alpine
          - fpm
          - fpm-alpine
          - zts
          - zts-alpine
        version:
          - '8.3'
        alias:
          - '8'
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      version: ${{ matrix.version }}
      variant: ${{ matrix.variant }}
      tags: |
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.date }}
        ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.date }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant}}-${{ needs.build-versions.outputs.sha }}
        ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.sha }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.alias }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.date }}
        ${{ github.repository_owner }}/php:${{ matrix.alias }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.date }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.alias }}-${{ matrix.variant}}-${{ needs.build-versions.outputs.sha }}
        ${{ github.repository_owner }}/php:${{ matrix.alias }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.sha }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.alias }}-${{ matrix.variant }}
        ${{ github.repository_owner }}/php:${{ matrix.alias }}-${{ matrix.variant }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.variant }}
        ${{ github.repository_owner }}/php:${{ matrix.variant }}

  build-versions:
    needs: create-version-id
    strategy:
      matrix:
        variant:
          - apache
          - cli
          - cli-alpine
          - fpm
          - fpm-alpine
          - zts
          - zts-alpine
        version:
          - '8.3'
          - '8.2'
          - '8.1'
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      version: ${{ matrix.version }}
      variant: ${{ matrix.variant }}
      tags: |
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.date }}
        ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.date }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant}}-${{ needs.build-versions.outputs.sha }}
        ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}-${{ needs.build-versions.outputs.sha }}
        ghcr.io/${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}
        ${{ github.repository_owner }}/php:${{ matrix.version }}-${{ matrix.variant }}

  clear-cache:
    runs-on: ubuntu-latest
    needs: ['tag-latest']
    steps:
      - name: Clear cache
        uses: actions/github-script@v7
        with:
          script: |
            console.log("About to clear")
            let caches = null
            const sleep = ms => new Promise(r => setTimeout(r, ms));
            do {
              caches = await github.rest.actions.getActionsCacheList({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100,
                sort: 'created_at',
                direction: 'asc'
              })
              for (let cache of caches.data.actions_caches) {
                console.log(cache)
                github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
              }
              //sleep 30 seconds before iterating again, to combat rate limiting
              await sleep(30000)
            } while(caches?.data?.actions_caches?.length > 0)
            console.log("Clear completed")
